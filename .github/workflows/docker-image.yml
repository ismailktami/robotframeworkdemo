name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
#   schedule:
#     - cron:  '*/15 * * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser'
        default: 'Chrome'
        required: false

      environnement:
        description: 'Environnement'
        default: 'Preprod'
        required: false
     
      publishReport:
        description: 'PublishReport'
        default: true
        required: false
      
      includeTags:
        description: 'Include tags'
        default: ''
        required: false
      
      excludeTags:
        description: 'Exclude tags'
        default: ''
        required: false

jobs:
  ExecutionTests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Prepare Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8' 
    
    - name: Build Image
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get -y update
        sudo apt-get install -y google-chrome-stable
        sudo apt-get install -yqq unzip
        wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_106`/chromedriver_linux64.zip
        unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/
        chmod 777 /usr/local/bin/chromedriver
        pip install --upgrade pip

    - name: Install requierement 
      run: pip install -r requirements.txt  

    - name: Prepare tags
      run: |
       tagsi=${{ github.event.inputs.includeTags }} ;IFS=',' read -r -a array <<< "$tagsi" ;a='' ;for i in "${array[@]}"; do OUTI=$OUTI" -i $i"; done ;
       echo "TAGSE=$OUTI" >> $GITHUB_ENV
       tagse=${{ github.event.inputs.excludeTags }} ;IFS=',' read -r -a array <<< "$tagse" ;a='' ;for i in "${array[@]}"; do OUTE=$OUTE" -e $i"; done ;
       echo "TAGSI=$OUTE" >> $GITHUB_ENV
    
    - name: Execute tests
      run:  robot -d reports -x results.xml ${{ env.TAGSI }} ${{ env.TAGSE }} demoecommerce/Tests/*.robot   
      
    - name: Archive results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: reports

    - name: Download reports
      if: always()
      uses: actions/download-artifact@v3
      with:
        name: reports
        
    - name: Send report to commit
      if: always()
      uses: joonvena/robotframework-reporter-action@v2.1
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}

  PublishResultsAzure:  
    runs-on: ubuntu-latest
    if: always()
    needs: [ExecutionTests]
    steps:
    - uses: actions/checkout@v3

    - name: Prepare Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8' 

    - name: Install requierement 
      run: pip install -r requirements.txt  
      
    - name: Download reports
      uses: actions/download-artifact@v3
      with:
        name: reports
        path: reports

    - name: Prepare Python 3.8
      run:  |
        ls reports
        python  publisher/azure_devops/__init__.py  "-e ${{ github.event.inputs.environnement }}"  "-i ${GITHUB_JOB_ID}"  "-l ${GITHUB_HTML_URL}"
